name: Setup repository via dispatch
on:
  repository_dispatch:
    types: [repository_setup]
  workflow_dispatch:
    inputs:
      licence_plate:
        description: "License plate"
        required: true

permissions:
  contents: write

jobs:
  setup-dispatch:
    name: Auto-reinitialize repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
            token: ${{ secrets.GITHUB_TOKEN  }}
      - name: Do not run scaffolding on template repository
        shell: bash
        # This workflow runs when the `cookiecutter.json` file is modified.
        # This is the trick to re-init a repository, but we don't want to
        # run this action if this file is modified in the origin template repository.
        #
        # Using the GitHub rest API allows us to identify if the current repository
        # is a template repository or not.
        run: |
          curl --silent -X GET \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN  }}" \
            -H "Accept: application/vnd.github.baptiste-preview+json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY \
            | jq --exit-status '.is_template == false';

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Cookiecutter
        run: pip install cookiecutter




      - name: Create and Push Charts Template
        run: |
          cookiecutter \
          ./charts \
          --verbose \
          --no-input \
          app_name=$(echo "${{ github.event.client_payload.licence_plate || github.event.inputs.licence_plate }}-app" | tr '[:upper:]' '[:lower:]') \
          licence_plate=$(echo "${{ github.event.client_payload.licence_plate || github.event.inputs.licence_plate }}" | tr '[:upper:]' '[:lower:]') \
          team_name=$(echo "${{ github.event.client_payload.licence_plate || github.event.inputs.licence_plate }}-team" | tr '[:upper:]' '[:lower:]') \
          project_name=$(echo "${{ github.event.client_payload.licence_plate || github.event.inputs.licence_plate }}-project" | tr '[:upper:]' '[:lower:]') \
          --output-dir ./cookiecutter-temp
        env:
          APP_NAME: ${{ github.event.client_payload.app_name || github.event.inputs.licence_plate }}
          LICENCE_PLATE: ${{ github.event.client_payload.licence_plate || github.event.inputs.licence_plate }}
          TEAM_NAME: ${{ github.event.client_payload.team_name || github.event.inputs.licence_plate }}
          PROJECT_NAME: ${{ github.event.client_payload.project_name || github.event.inputs.licence_plate }}
    
      - name: Create and Push Application Template
        run: |
          cookiecutter \
          ./application \
          --verbose \
          --no-input \
          app_name=$(echo "${{ github.event.client_payload.licence_plate }}-app" | tr '[:upper:]' '[:lower:]') \
          licence_plate=$(echo "${{ github.event.client_payload.licence_plate }}" | tr '[:upper:]' '[:lower:]') \
          team_name=$(echo "${{ github.event.client_payload.licence_plate }}-team" | tr '[:upper:]' '[:lower:]') \
          project_name=$(echo "${{ github.event.client_payload.licence_plate }}-project" | tr '[:upper:]' '[:lower:]') \
          --output-dir ./cookiecutter-temp
    
      - name: Create and Push Application Code
        run: |
          cookiecutter \
          ./appcode \
          --verbose \
          --no-input \
          app_name=$(echo "${{ github.event.client_payload.licence_plate }}-app" | tr '[:upper:]' '[:lower:]') \
          licence_plate=$(echo "${{ github.event.client_payload.licence_plate }}" | tr '[:upper:]' '[:lower:]') \
          team_name=$(echo "${{ github.event.client_payload.licence_plate }}-team" | tr '[:upper:]' '[:lower:]') \
          project_name=$(echo "${{ github.event.client_payload.licence_plate }}-project" | tr '[:upper:]' '[:lower:]') \
          --output-dir ./cookiecutter-temp

      # - name: Create and Push workflow Template
      #   run: |
      #     cookiecutter \
      #     ./workflow \
      #     --verbose \
      #     --no-input \
      #     app_name=$(echo "${{ github.event.client_payload.licence_plate }}-app" | tr '[:upper:]' '[:lower:]') \
      #     licence_plate=$(echo "${{ github.event.client_payload.licence_plate }}" | tr '[:upper:]' '[:lower:]') \
      #     team_name=$(echo "${{ github.event.client_payload.licence_plate }}-team" | tr '[:upper:]' '[:lower:]') \
      #     project_name=$(echo "${{ github.event.client_payload.licence_plate }}-project" | tr '[:upper:]' '[:lower:]') \
      #     --output-dir ./cookiecutter-temp

      - name: Create and Push deploy Template
        run: |
          cookiecutter \
          ./deploy \
          --verbose \
          --no-input \
          app_name=$(echo "${{ github.event.client_payload.licence_plate }}-app" | tr '[:upper:]' '[:lower:]') \
          licence_plate=$(echo "${{ github.event.client_payload.licence_plate }}" | tr '[:upper:]' '[:lower:]') \
          team_name=$(echo "${{ github.event.client_payload.licence_plate }}-team" | tr '[:upper:]' '[:lower:]') \
          project_name=$(echo "${{ github.event.client_payload.licence_plate }}-project" | tr '[:upper:]' '[:lower:]') \
          --output-dir ./cookiecutter-temp
    
      # - name: Create and Push RBAC Template
      #   run: |
      #     cookiecutter \
      #     ./rbac \
      #     --verbose \
      #     --no-input \
      #     app_name=$(echo "${{ github.event.client_payload.licence_plate }}-app" | tr '[:upper:]' '[:lower:]') \
      #     licence_plate=$(echo "${{ github.event.client_payload.licence_plate }}" | tr '[:upper:]' '[:lower:]') \
      #     team_name=$(echo "${{ github.event.client_payload.licence_plate }}-team" | tr '[:upper:]' '[:lower:]') \
      #     project_name=$(echo "${{ github.event.client_payload.licence_plate }}-project" | tr '[:upper:]' '[:lower:]') \
      #     --output-dir ./cookiecutter-temp

   
      - name: Prepare root directory
        shell: bash
        # Remove all files and folder exepct .git/ and cookiecutter-temp/
        run: |
          find ./ -maxdepth 1 \
          ! -name '.git' \
          ! -name 'cookiecutter-temp' \
          ! -name 'README.md' \
          ! -name '.github/workflows/repository-setup.yml' \
          ! -exec rm -rf {} +

      - name: Move files to root
        shell: bash
        # The cookiecutter-temp/ folder contains a single folder which is the
        # generated project by cookiecutter. We want to move all the project
        # files into the root directory so we can reinitialize git in the next step
        run: |
          shopt -s dotglob
          rsync -r ./cookiecutter-temp/* . && \
          rm -rf ./cookiecutter-temp/
          shopt -u dotglob
    
      - name: Replace Placeholders
        id: placeholder
        run: |
            sed -i "s/\$app/${{ github.event.client_payload.licence_plate }}-app/g; s/\$namespace/${{ github.event.client_payload.licence_plate }}/g; s/\$team/${{ github.event.client_payload.licence_plate }}-team/g" README.md

           


      - name: Reinitialize git repository
        shell: bash
        # Reinitialize git after scaffolding this repository.
        # We use `git checkout --orphan` to create a branch in a git init-like state.
        # By force pushing this as `main` we end up with a new clean git history.
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          git add .
          git commit -m "Automated commit: Create Cookiecutter template"
          git push origin develop

          git checkout -b test develop
          git push origin test

          git checkout -b main develop
          git push origin main


