name: Setup repository
on:
  workflow_dispatch:
    inputs:
      app_name:
        description: "Application name"
        required: true
      licence_plate:
        description: "License plate"
        required: true
      team_name:
        description: "Team name"
        required: true
      project_name:
        description: "Project name"
        required: true
jobs:
  setup:
    name: Reinitialize repository
    runs-on: ubuntu-latest
    env:
      REPO_SETUP_TOKEN: ${{ secrets.REPO_SETUP_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Do not run scaffolding on template repository
        shell: bash
        # This workflow runs when the `cookiecutter.json` file is modified.
        # This is the trick to re-init a repository, but we don't want to
        # run this action if this file is modified in the origin template repository.
        #
        # Using the GitHub rest API allows us to identify if the current repository
        # is a template repository or not.
        run: |
          curl --silent -X GET \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.baptiste-preview+json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY \
            | jq --exit-status '.is_template == false';

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Cookiecutter
        run: pip install cookiecutter

      - name: Create and Push Charts Template
        run: |
          cookiecutter \
          --verbose \
          ./charts
          --output-dir ./cookiecutter-temp \
          --no-input \
          --config-file - \
          --no-config
        shell: /usr/bin/bash -e {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COOKIECUTTER_CONFIG: |
            app_name: ${{ github.event.inputs.app_name }}
            licence_plate: ${{ github.event.inputs.licence_plate }}
            team_name: ${{ github.event.inputs.team_name }}
            project_name: ${{ github.event.inputs.project_name }}

      - name: Prepare root directory
        shell: bash
        # Remove all files and folder exepct .git/ and cookiecutter-temp/
        run: |
          find ./ -maxdepth 1 \
          ! -name '.git' \
          ! -name 'cookiecutter-temp' \
          ! -name '.' \
          ! -exec rm -rf {} +

      - name: Move files to root
        shell: bash
        # The cookiecutter-temp/ folder contains a single folder which is the
        # generated project by cookiecutter. We want to move all the project
        # files into the root directory so we can reinitialize git in the next step
        run: |
          rsync -r ./cookiecutter-temp/*/ . && \
          rm -rf ./cookiecutter-temp/

      - name: Reinitialize git repository
        shell: bash
        # Reinitialize git after scaffolding this repository.
        # We use `git checkout --orphan` to create a branch in a git init-like state.
        # By force pushing this as `main` we end up with a new clean git history.
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -m "Automated commit: Create Cookiecutter template"
          git push origin main

      - name: Remove secret REPO_SETUP_TOKEN
        # After re-initializing the repository, we can remove the `REPO_SETUP_TOKEN` secret.
        shell: bash
        if: ${{ env.REPO_SETUP_TOKEN }}
        run: |
          curl \
            -X DELETE --fail \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ env.REPO_SETUP_TOKEN }}" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/actions/secrets/REPO_SETUP_TOKEN
